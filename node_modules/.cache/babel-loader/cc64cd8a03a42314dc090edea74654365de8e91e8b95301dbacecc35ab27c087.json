{"ast":null,"code":"var _jsxFileName = \"/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task-list/task-list.tsx\";\nimport React from \"react\";\nimport Task from \"../task\";\nimport \"./task-list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  todos,\n  onDeleted,\n  onToggleDone,\n  onEdited\n}) => {\n  const elements = todos.map(item => {\n    const {\n      id,\n      ...itemProps\n    } = item;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        ...itemProps,\n        onDeleted: () => onDeleted(id),\n        onEdited: editedLabel => onEdited(id, editedLabel),\n        onToggleDone: () => onToggleDone(id),\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","Task","jsxDEV","_jsxDEV","TaskList","todos","onDeleted","onToggleDone","onEdited","elements","map","item","id","itemProps","className","children","editedLabel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task-list/task-list.tsx"],"sourcesContent":["import React from \"react\";\nimport Task from \"../task\";\nimport \"./task-list.css\";\n\ninterface TodoItem {\n  id: string;\n  label: string;\n  done: boolean;\n  isNewTask?: boolean;\n  [key: string]: any;\n}\n\ninterface TaskListProps {\n  todos: TodoItem[];\n  onDeleted: (id: string) => void;\n  onToggleDone: (id: string) => void;\n  onEdited: (id: string, editedLabel: string) => void;\n}\n\nconst TaskList: React.FC<TaskListProps> = ({\n  todos,\n  onDeleted,\n  onToggleDone,\n  onEdited,\n}) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n    return (\n      <li key={id} className=\"list-group-item\">\n        <Task\n          {...itemProps}\n          onDeleted={() => onDeleted(id)}\n          onEdited={(editedLabel: string) => onEdited(id, editedLabel)}\n          onToggleDone={() => onToggleDone(id)}\n          id={id}\n        />\n      </li>\n    );\n  });\n  return <ul className=\"todo-list\">{elements}</ul>;\n};\n\nexport default TaskList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBzB,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,KAAK;EACLC,SAAS;EACTC,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;IACnC,MAAM;MAAEC,EAAE;MAAE,GAAGC;IAAU,CAAC,GAAGF,IAAI;IACjC,oBACER,OAAA;MAAaW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eACtCZ,OAAA,CAACF,IAAI;QAAA,GACCY,SAAS;QACbP,SAAS,EAAEA,CAAA,KAAMA,SAAS,CAACM,EAAE,CAAE;QAC/BJ,QAAQ,EAAGQ,WAAmB,IAAKR,QAAQ,CAACI,EAAE,EAAEI,WAAW,CAAE;QAC7DT,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACK,EAAE,CAAE;QACrCA,EAAE,EAAEA;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC,GAPKR,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQP,CAAC;EAET,CAAC,CAAC;EACF,oBAAOjB,OAAA;IAAIW,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAEN;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClD,CAAC;AAACC,EAAA,GArBIjB,QAAiC;AAuBvC,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}