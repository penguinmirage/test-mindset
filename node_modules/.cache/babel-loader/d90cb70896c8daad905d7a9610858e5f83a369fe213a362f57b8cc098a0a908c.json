{"ast":null,"code":"var _jsxFileName = \"/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/app/app.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AppHeader from \"../app-header/\";\nimport TaskList from \"../task-list\";\nimport TasksFilter from \"../tasks-filter/taskFilter\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../app-footer\";\nimport SearchPanel from \"../search-panel\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ({\n  initialTodoData = [],\n  initialFilter = \"all\"\n}) => {\n  _s();\n  const [todoData, setTodoData] = useState(initialTodoData);\n  const [term, setTerm] = useState(\"\");\n  const [filter, setFilter] = useState(initialFilter);\n  const createTodoItem = label => ({\n    label,\n    done: false,\n    id: Date.now().toString(),\n    isNewTask: true\n  });\n  const deleteItem = id => {\n    setTodoData(todoData => todoData.filter(item => item.id !== id));\n  };\n  const addItem = text => {\n    const newItem = createTodoItem(text);\n    setTodoData(todoData => [...todoData, newItem]);\n  };\n  const editItem = (id, editedItem) => {\n    setTodoData(todoData => todoData.map(item => item.id === id ? {\n      ...item,\n      label: editedItem\n    } : item));\n  };\n  const toggleProperty = (arr, id, propName) => arr.map(item => item.id === id ? {\n    ...item,\n    [propName]: !item[propName]\n  } : item);\n  const onToggleDone = id => {\n    setTodoData(todoData => toggleProperty(todoData, id, \"done\"));\n  };\n  const search = (items, term) => term.length === 0 ? items : items.filter(item => item.label.toLowerCase().includes(term.toLowerCase()));\n  const filterItems = (items, filter) => {\n    switch (filter) {\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter(item => !item.done);\n      case \"done\":\n        return items.filter(item => item.done);\n      default:\n        return items;\n    }\n  };\n  const onFilterChange = newFilter => setFilter(newFilter);\n  const onCleared = () => setTodoData(todoData => todoData.filter(item => !item.done));\n  const visibleItems = filterItems(search(todoData, term), filter);\n  const doneCount = todoData.filter(el => el.done).length;\n  const todoCount = todoData.length - doneCount;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n      addItem: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchPanel, {\n      onSearchChange: term => setTerm(term)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      todos: visibleItems,\n      onDeleted: deleteItem,\n      onEdited: editItem,\n      onToggleDone: onToggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(Footer, {\n        count: todoCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TasksFilter, {\n        filter: filter,\n        onFilterChange: onFilterChange,\n        onCleared: onCleared\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HBpVkDLBPHAglV1BCaIGNr3ioLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AppHeader","TaskList","TasksFilter","NewTaskForm","Footer","SearchPanel","jsxDEV","_jsxDEV","App","initialTodoData","initialFilter","_s","todoData","setTodoData","term","setTerm","filter","setFilter","createTodoItem","label","done","id","Date","now","toString","isNewTask","deleteItem","item","addItem","text","newItem","editItem","editedItem","map","toggleProperty","arr","propName","onToggleDone","search","items","length","toLowerCase","includes","filterItems","onFilterChange","newFilter","onCleared","visibleItems","doneCount","el","todoCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","todos","onDeleted","onEdited","count","_c","$RefreshReg$"],"sources":["/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/app/app.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport AppHeader from \"../app-header/\";\nimport TaskList from \"../task-list\";\nimport TasksFilter from \"../tasks-filter/taskFilter\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../app-footer\";\nimport SearchPanel from \"../search-panel\";\nimport \"./app.css\";\n\n\ninterface TodoItem {\n  label: string;\n  done: boolean;\n  id: string;\n  isNewTask: boolean;\n}\n\ninterface AppProps {\n  initialTodoData?: TodoItem[];\n  initialFilter?: string;\n}\n\nconst App: React.FC<AppProps> = ({\n  initialTodoData = [],\n  initialFilter = \"all\",\n}) => {\n  const [todoData, setTodoData] = useState<TodoItem[]>(initialTodoData);\n  const [term, setTerm] = useState<string>(\"\");\n  const [filter, setFilter] = useState<string>(initialFilter);\n\n  const createTodoItem = (label: string): TodoItem => ({\n    label,\n    done: false,\n    id: Date.now().toString(),\n    isNewTask: true,\n  });\n\n  const deleteItem = (id: string): void => {\n    setTodoData((todoData) => todoData.filter((item) => item.id !== id));\n  };\n\n  const addItem = (text: string): void => {\n    const newItem = createTodoItem(text);\n    setTodoData((todoData) => [...todoData, newItem]);\n  };\n\n  const editItem = (id: string, editedItem: string): void => {\n    setTodoData((todoData) =>\n      todoData.map((item) =>\n        item.id === id ? { ...item, label: editedItem } : item,\n      ),\n    );\n  };\n\n  const toggleProperty = (\n    arr: TodoItem[],\n    id: string,\n    propName: keyof TodoItem,\n  ): TodoItem[] =>\n    arr.map((item) =>\n      item.id === id ? { ...item, [propName]: !item[propName] } : item,\n    );\n\n  const onToggleDone = (id: string): void => {\n    setTodoData((todoData) => toggleProperty(todoData, id, \"done\"));\n  };\n\n\n\n  const search = (items: TodoItem[], term: string): TodoItem[] =>\n    term.length === 0\n      ? items\n      : items.filter((item) =>\n          item.label.toLowerCase().includes(term.toLowerCase()),\n        );\n\n  const filterItems = (items: TodoItem[], filter: string): TodoItem[] => {\n    switch (filter) {\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter((item) => !item.done);\n      case \"done\":\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  };\n\n  const onFilterChange = (newFilter: string): void => setFilter(newFilter);\n\n  const onCleared = (): void =>\n    setTodoData((todoData) => todoData.filter((item) => !item.done));\n\n  const visibleItems = filterItems(search(todoData, term), filter);\n  const doneCount = todoData.filter((el) => el.done).length;\n  const todoCount = todoData.length - doneCount;\n\n  return (\n    <div className=\"todoapp\">\n      <AppHeader />\n      <NewTaskForm addItem={addItem} />\n      <SearchPanel \n        onSearchChange={(term) => setTerm(term)}\n      />\n      <TaskList\n        todos={visibleItems}\n        onDeleted={deleteItem}\n        onEdited={editItem}\n        onToggleDone={onToggleDone}\n      />\n      <div className=\"footer\">\n        <Footer count={todoCount} />\n        <TasksFilter\n          filter={filter}\n          onFilterChange={onFilterChange}\n          onCleared={onCleared}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}