{"ast":null,"code":"var _jsxFileName = \"/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task/task.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListItem = ({\n  id,\n  label,\n  onDeleted,\n  onEdited,\n  onToggleDone,\n  onToggleImportant,\n  done = false,\n  important = false,\n  isNewTask = false,\n  filter = \"all\"\n}) => {\n  _s();\n  const existingElapsedTime = parseInt(localStorage.getItem(`timer-${id}`) || \"0\") || 0;\n  const existingTimerActive = JSON.parse(localStorage.getItem(`timerActive-${id}`) || \"false\") || false;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState(label);\n  const [createdTime] = useState(new Date());\n  const [editedTime, setEditedTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(isNewTask ? 0 : existingElapsedTime);\n  const [timerActive, setTimerActive] = useState(isNewTask ? false : existingTimerActive);\n  const startTimer = useCallback(() => {\n    return setInterval(() => {\n      setElapsedTime(prevElapsedTime => {\n        const newElapsedTime = prevElapsedTime + 1;\n        localStorage.setItem(`timer-${id}`, newElapsedTime.toString());\n        return newElapsedTime;\n      });\n    }, 1000);\n  }, [id]);\n  useEffect(() => {\n    let intervalId;\n    if (timerActive) {\n      intervalId = startTimer();\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      localStorage.setItem(`timer-${id}`, elapsedTime.toString());\n      localStorage.setItem(`timerActive-${id}`, JSON.stringify(timerActive));\n    };\n  }, [timerActive, elapsedTime, id, startTimer]);\n  const handleStartStop = () => {\n    setTimerActive(!timerActive);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${String(minutes).padStart(2, \"0\")}:${String(remainingSeconds).padStart(2, \"0\")}`;\n  };\n  const handleToggleDone = () => {\n    onToggleDone(id);\n    if (!done) {\n      setTimerActive(false);\n    }\n  };\n  const saveChangesEditing = e => {\n    e.preventDefault();\n    if (editedTask.trim()) {\n      onEdited(editedTask);\n      setIsEditing(false);\n      setEditedTime(new Date());\n    }\n  };\n  const createTimestamp = () => {\n    return editedTime ? `edited ${formatDistanceToNow(editedTime, {\n      includeSeconds: true\n    })}` : `created ${formatDistanceToNow(createdTime, {\n      includeSeconds: true\n    })}`;\n  };\n  let classNames = \"todo-list-item description\";\n  if (done) {\n    classNames += \" done completed\";\n  }\n  if (important) {\n    classNames += \" important\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"toggle\",\n      type: \"checkbox\",\n      onChange: handleToggleDone,\n      checked: done\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"editing\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTask,\n        onChange: e => setEditedTask(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && saveChangesEditing(e),\n        className: \"edit\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-list-item\",\n      onClick: handleToggleDone,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNames,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"created\",\n        children: createTimestamp()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(elapsedTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartStop,\n        className: \"icon-timer\",\n        children: timerActive ? \"⏸\" : \"▶\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"btn\",\n      onClick: () => setIsEditing(true),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), onToggleImportant && /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"btn\",\n      onClick: onToggleImportant,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-important\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"btn\",\n      onClick: onDeleted,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-destroy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListItem, \"BXQyoJx4VHyi0/2pqfV4Wq766qY=\");\n_c = TodoListItem;\nexport default TodoListItem;\nvar _c;\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","formatDistanceToNow","jsxDEV","_jsxDEV","TodoListItem","id","label","onDeleted","onEdited","onToggleDone","onToggleImportant","done","important","isNewTask","filter","_s","existingElapsedTime","parseInt","localStorage","getItem","existingTimerActive","JSON","parse","isEditing","setIsEditing","editedTask","setEditedTask","createdTime","Date","editedTime","setEditedTime","elapsedTime","setElapsedTime","timerActive","setTimerActive","startTimer","setInterval","prevElapsedTime","newElapsedTime","setItem","toString","intervalId","clearInterval","stringify","handleStartStop","formatTime","seconds","minutes","Math","floor","remainingSeconds","String","padStart","handleToggleDone","saveChangesEditing","e","preventDefault","trim","createTimestamp","includeSeconds","classNames","className","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","value","target","onKeyDown","key","autoFocus","onClick","_c","$RefreshReg$"],"sources":["/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task/task.tsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback,\n  KeyboardEvent,\n  ChangeEvent,\n  FormEvent,\n} from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\n\ninterface TodoListItemProps {\n  id: string;\n  label: string;\n  onDeleted: () => void;\n  onEdited: (text: string) => void;\n  onToggleDone: (id: string) => void;\n  onToggleImportant?: () => void;\n  done?: boolean;\n  important?: boolean;\n  isNewTask?: boolean;\n  filter?: string;\n}\n\nconst TodoListItem: React.FC<TodoListItemProps> = ({\n  id,\n  label,\n  onDeleted,\n  onEdited,\n  onToggleDone,\n  onToggleImportant,\n  done = false,\n  important = false,\n  isNewTask = false,\n  filter = \"all\",\n}) => {\n  const existingElapsedTime: number =\n    parseInt(localStorage.getItem(`timer-${id}`) || \"0\") || 0;\n  const existingTimerActive: boolean =\n    JSON.parse(localStorage.getItem(`timerActive-${id}`) || \"false\") || false;\n\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTask, setEditedTask] = useState<string>(label);\n  const [createdTime] = useState<Date>(new Date());\n  const [editedTime, setEditedTime] = useState<Date | null>(null);\n  const [elapsedTime, setElapsedTime] = useState<number>(\n    isNewTask ? 0 : existingElapsedTime\n  );\n  const [timerActive, setTimerActive] = useState<boolean>(\n    isNewTask ? false : existingTimerActive\n  );\n\n  const startTimer = useCallback((): NodeJS.Timeout => {\n    return setInterval(() => {\n      setElapsedTime((prevElapsedTime) => {\n        const newElapsedTime = prevElapsedTime + 1;\n        localStorage.setItem(`timer-${id}`, newElapsedTime.toString());\n        return newElapsedTime;\n      });\n    }, 1000);\n  }, [id]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout | undefined;\n\n    if (timerActive) {\n      intervalId = startTimer();\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      localStorage.setItem(`timer-${id}`, elapsedTime.toString());\n      localStorage.setItem(`timerActive-${id}`, JSON.stringify(timerActive));\n    };\n  }, [timerActive, elapsedTime, id, startTimer]);\n\n  const handleStartStop = (): void => {\n    setTimerActive(!timerActive);\n  };\n\n  const formatTime = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${String(minutes).padStart(2, \"0\")}:${String(\n      remainingSeconds\n    ).padStart(2, \"0\")}`;\n  };\n\n  const handleToggleDone = (): void => {\n    onToggleDone(id);\n    if (!done) {\n      setTimerActive(false);\n    }\n  };\n\n  const saveChangesEditing = (e: FormEvent): void => {\n    e.preventDefault();\n    if (editedTask.trim()) {\n      onEdited(editedTask);\n      setIsEditing(false);\n      setEditedTime(new Date());\n    }\n  };\n\n  const createTimestamp = (): string => {\n    return editedTime\n      ? `edited ${formatDistanceToNow(editedTime, { includeSeconds: true })}`\n      : `created ${formatDistanceToNow(createdTime, { includeSeconds: true })}`;\n  };\n\n  let classNames = \"todo-list-item description\";\n  if (done) {\n    classNames += \" done completed\";\n  }\n  if (important) {\n    classNames += \" important\";\n  }\n\n  return (\n    <span className=\"todo-list\">\n      <input\n        className=\"toggle\"\n        type=\"checkbox\"\n        onChange={handleToggleDone}\n        checked={done}\n      />\n      {isEditing ? (\n        <li className=\"editing\">\n          <input\n            type=\"text\"\n            value={editedTask}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setEditedTask(e.target.value)\n            }\n            onKeyDown={(e: KeyboardEvent<HTMLInputElement>) =>\n              e.key === \"Enter\" && saveChangesEditing(e)\n            }\n            className=\"edit\"\n            autoFocus\n          />\n        </li>\n      ) : (\n        <label className=\"todo-list-item\" onClick={handleToggleDone}>\n          <span className={classNames}>{label}</span>\n          <span className=\"created\">{createTimestamp()}</span>\n        </label>\n      )}\n\n      <div className=\"timer\">\n        <span>{formatTime(elapsedTime)}</span>\n        <button onClick={handleStartStop} className=\"icon-timer\">\n          {timerActive ? \"⏸\" : \"▶\"}\n        </button>\n      </div>\n\n      <li className=\"btn\" onClick={() => setIsEditing(true)}>\n        <i className=\"icon icon-edit\" />\n      </li>\n\n      {onToggleImportant && (\n        <li className=\"btn\" onClick={onToggleImportant}>\n          <i className=\"icon icon-important\" />\n        </li>\n      )}\n\n      <li className=\"btn\" onClick={onDeleted}>\n        <i className=\"icon icon-destroy\" />\n      </li>\n    </span>\n  );\n};\n\nexport default TodoListItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}