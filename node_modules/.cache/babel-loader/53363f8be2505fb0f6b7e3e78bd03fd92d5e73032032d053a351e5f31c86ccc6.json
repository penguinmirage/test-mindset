{"ast":null,"code":"var _jsxFileName = \"/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task-list/task-list.tsx\";\nimport React from \"react\";\nimport Task from \"../task\";\nimport \"./task-list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  todos,\n  onToggleDone\n}) => {\n  const elements = todos.map(item => {\n    const {\n      id,\n      ...itemProps\n    } = item;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        ...itemProps,\n        onToggleDone: () => onToggleDone(id),\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","Task","jsxDEV","_jsxDEV","TaskList","todos","onToggleDone","elements","map","item","id","itemProps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task-list/task-list.tsx"],"sourcesContent":["import React from \"react\";\nimport Task from \"../task\";\nimport \"./task-list.css\";\n\ninterface TodoItem {\n  id: string;\n  label: string;\n  done: boolean;\n}\n\ninterface TaskListProps {\n  todos: TodoItem[];\n  onToggleDone: (id: string) => void;\n}\n\nconst TaskList: React.FC<TaskListProps> = ({\n  todos,\n  onToggleDone,\n}) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n    return (\n      <li key={id} className=\"list-group-item\">\n        <Task\n          {...itemProps}\n          onToggleDone={() => onToggleDone(id)}\n          id={id}\n        />\n      </li>\n    );\n  });\n  return <ul className=\"todo-list\">{elements}</ul>;\n};\n\nexport default TaskList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAazB,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,KAAK;EACLC;AACF,CAAC,KAAK;EACJ,MAAMC,QAAQ,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;IACnC,MAAM;MAAEC,EAAE;MAAE,GAAGC;IAAU,CAAC,GAAGF,IAAI;IACjC,oBACEN,OAAA;MAAaS,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eACtCV,OAAA,CAACF,IAAI;QAAA,GACCU,SAAS;QACbL,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACI,EAAE,CAAE;QACrCA,EAAE,EAAEA;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC,GALKP,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CAAC;EAET,CAAC,CAAC;EACF,oBAAOd,OAAA;IAAIS,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAEN;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClD,CAAC;AAACC,EAAA,GAjBId,QAAiC;AAmBvC,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}