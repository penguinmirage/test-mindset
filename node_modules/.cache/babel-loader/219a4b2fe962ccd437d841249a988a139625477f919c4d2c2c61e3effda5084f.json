{"ast":null,"code":"var _jsxFileName = \"/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/new-task-form/newTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./newTaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTaskForm = ({\n  addItem,\n  defaultLabel = \"Empty task added\"\n}) => {\n  _s();\n  const [label, setLabel] = useState(\"\");\n  const onLabelChange = e => {\n    setLabel(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if (label.trim() !== \"\") {\n      addItem(label);\n      setLabel(\"\"); // Reset input after adding the item\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"new-todo\",\n      onChange: onLabelChange,\n      placeholder: \"What needs to be done?\",\n      value: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTaskForm, \"DHw7kQJPu1+BXvhu2Zs+N/R7U4k=\");\n_c = NewTaskForm;\nexport default NewTaskForm;\nvar _c;\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewTaskForm","addItem","defaultLabel","_s","label","setLabel","onLabelChange","e","target","value","onSubmit","preventDefault","trim","children","type","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/new-task-form/newTaskForm.tsx"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from \"react\";\nimport \"./newTaskForm.css\";\n\ninterface NewTaskFormProps {\n  addItem: (text: string) => void;\n  defaultLabel?: string;\n}\n\nconst NewTaskForm: React.FC<NewTaskFormProps> = ({\n  addItem,\n  defaultLabel = \"Empty task added\",\n}) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  const onLabelChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setLabel(e.target.value);\n  };\n\n  const onSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    if (label.trim() !== \"\") {\n      addItem(label);\n      setLabel(\"\"); // Reset input after adding the item\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        onChange={onLabelChange}\n        placeholder=\"What needs to be done?\"\n        value={label}\n      />\n    </form>\n  );\n};\n\nexport default NewTaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAgC,OAAO;AAC/D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3B,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,OAAO;EACPC,YAAY,GAAG;AACjB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMS,aAAa,GAAIC,CAAgC,IAAW;IAChEF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,QAAQ,GAAIH,CAA6B,IAAW;IACxDA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIP,KAAK,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBX,OAAO,CAACG,KAAK,CAAC;MACdC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMW,QAAQ,EAAEA,QAAS;IAAAG,QAAA,eACvBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,SAAS,EAAC,UAAU;MACpBC,QAAQ,EAAEV,aAAc;MACxBW,WAAW,EAAC,wBAAwB;MACpCR,KAAK,EAAEL;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAClB,EAAA,CA7BIH,WAAuC;AAAAsB,EAAA,GAAvCtB,WAAuC;AA+B7C,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}