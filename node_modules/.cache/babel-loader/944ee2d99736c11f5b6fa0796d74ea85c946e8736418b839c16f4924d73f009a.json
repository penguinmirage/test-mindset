{"ast":null,"code":"var _jsxFileName = \"/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task/task.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListItem = ({\n  id,\n  label,\n  onDeleted,\n  onEdited,\n  onToggleDone,\n  done = false,\n  isNewTask = false,\n  filter = \"all\"\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState(label);\n  const [createdTime] = useState(new Date());\n  const [editedTime, setEditedTime] = useState(null);\n  const handleToggleDone = () => {\n    onToggleDone(id);\n  };\n  const saveChangesEditing = e => {\n    e.preventDefault();\n    if (editedTask.trim()) {\n      onEdited(editedTask);\n      setIsEditing(false);\n      setEditedTime(new Date());\n    }\n  };\n  const createTimestamp = () => {\n    return editedTime ? `edited ${formatDistanceToNow(editedTime, {\n      includeSeconds: true\n    })}` : `created ${formatDistanceToNow(createdTime, {\n      includeSeconds: true\n    })}`;\n  };\n  let classNames = \"todo-list-item description\";\n  if (done) {\n    classNames += \" done completed\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"toggle\",\n      type: \"checkbox\",\n      onChange: handleToggleDone,\n      checked: done\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"editing\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTask,\n        onChange: e => setEditedTask(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && saveChangesEditing(e),\n        className: \"edit\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-list-item\",\n      onClick: handleToggleDone,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNames,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"created\",\n        children: createTimestamp()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"btn\",\n      onClick: () => setIsEditing(true),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"btn\",\n      onClick: onDeleted,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-destroy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListItem, \"Aq/OFloTOIX2JYNKWtHOAZOW1MA=\");\n_c = TodoListItem;\nexport default TodoListItem;\nvar _c;\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useState","formatDistanceToNow","jsxDEV","_jsxDEV","TodoListItem","id","label","onDeleted","onEdited","onToggleDone","done","isNewTask","filter","_s","isEditing","setIsEditing","editedTask","setEditedTask","createdTime","Date","editedTime","setEditedTime","handleToggleDone","saveChangesEditing","e","preventDefault","trim","createTimestamp","includeSeconds","classNames","className","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","value","target","onKeyDown","key","autoFocus","onClick","_c","$RefreshReg$"],"sources":["/Users/petrchukhnov/Projects/todo-testapp-react/todomindset/src/components/task/task.tsx"],"sourcesContent":["import React, {\n  useState,\n  KeyboardEvent,\n  ChangeEvent,\n  FormEvent,\n} from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\n\ninterface TodoListItemProps {\n  id: string;\n  label: string;\n  onDeleted: () => void;\n  onEdited: (text: string) => void;\n  onToggleDone: (id: string) => void;\n  done?: boolean;\n  isNewTask?: boolean;\n  filter?: string;\n}\n\nconst TodoListItem: React.FC<TodoListItemProps> = ({\n  id,\n  label,\n  onDeleted,\n  onEdited,\n  onToggleDone,\n  done = false,\n  isNewTask = false,\n  filter = \"all\",\n}) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTask, setEditedTask] = useState<string>(label);\n  const [createdTime] = useState<Date>(new Date());\n  const [editedTime, setEditedTime] = useState<Date | null>(null);\n\n  const handleToggleDone = (): void => {\n    onToggleDone(id);\n  };\n\n  const saveChangesEditing = (e: FormEvent): void => {\n    e.preventDefault();\n    if (editedTask.trim()) {\n      onEdited(editedTask);\n      setIsEditing(false);\n      setEditedTime(new Date());\n    }\n  };\n\n  const createTimestamp = (): string => {\n    return editedTime\n      ? `edited ${formatDistanceToNow(editedTime, { includeSeconds: true })}`\n      : `created ${formatDistanceToNow(createdTime, { includeSeconds: true })}`;\n  };\n\n  let classNames = \"todo-list-item description\";\n  if (done) {\n    classNames += \" done completed\";\n  }\n\n\n  return (\n    <span className=\"todo-list\">\n      <input\n        className=\"toggle\"\n        type=\"checkbox\"\n        onChange={handleToggleDone}\n        checked={done}\n      />\n      {isEditing ? (\n        <li className=\"editing\">\n          <input\n            type=\"text\"\n            value={editedTask}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setEditedTask(e.target.value)\n            }\n            onKeyDown={(e: KeyboardEvent<HTMLInputElement>) =>\n              e.key === \"Enter\" && saveChangesEditing(e)\n            }\n            className=\"edit\"\n            autoFocus\n          />\n        </li>\n      ) : (\n        <label className=\"todo-list-item\" onClick={handleToggleDone}>\n          <span className={classNames}>{label}</span>\n          <span className=\"created\">{createTimestamp()}</span>\n        </label>\n      )}\n\n      <li className=\"btn\" onClick={() => setIsEditing(true)}>\n        <i className=\"icon icon-edit\" />\n      </li>\n\n      <li className=\"btn\" onClick={onDeleted}>\n        <i className=\"icon icon-destroy\" />\n      </li>\n    </span>\n  );\n};\n\nexport default TodoListItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}